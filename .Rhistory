counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean1.2008SD'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(100*5), ncol=5)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean1.2008SD'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(100*5), ncol=5)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean1.2008SD'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(100*5), ncol=5)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean1.2008SD'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(100*5), ncol=5)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean1.2008SD'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(100*5), ncol=5)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
sum(counter<0.5)
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(100*5), ncol=5)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(100*5), ncol=5)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(100*5), ncol=5)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(100*5), ncol=5)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
sim1.2017Liu(X)
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=10)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=10)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=10)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=10)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=10)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
