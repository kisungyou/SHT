counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 3
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
sim1.2017Liu(X)
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
p = 10
X = matrix(rnorm(100*p), ncol=p)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=10)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=10)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=10)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=10)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=10)
counter[i] = ifelse(sim1.2017Liu(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'sim1.2017Liu'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
library(SHT)
library(SHT)
date <- date()
date
names(dat)
names(date)
date
library(SHT)
library(SHT)
library(SHT)
library(SHT)
library(SHT)
library(SHT)
library(SHT)
library(SHT)
library(SHT)
library(SHT)
library(SHT)
library(SHT)
library(SHT)
help("cov2.2013CLX")
help("mean2.2014CLX")
help("cov2.2013CLX")
library(SHT)
library(pracma)
help(pinv)
X = matrix(rnorm(25),nrow=5)
A = X%*%X
pinv(A)
solve(A)
help(pf)
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(mean2.1965Yao(X,Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean2.1965Yao'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(mean2.1965Yao(X,Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean2.1965Yao'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
A
solve(A,diag(5))
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(mean2.1980Johansen(X,Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean2.1980Johansen'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(mean2.1980Johansen(X,Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean2.1980Johansen'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
help("mean2.1980Johansen")
library(SHT)
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(mean2.1986NVM(X,Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean2.1986NVM'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(mean2.1986NVM(X,Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean2.1986NVM'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
help("mean2.2004KY")
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(mean2.2004KY(X,Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean2.2004KY'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(mean2.2004KY(X,Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'mean2.2004KY'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
library(SHT)
library(SHT)
x = matrix(rnorm(100*10),ncol=10)
y = matrix(rnorm(100*10, mean=0.9), ncol=10)
z = matrix(rnorm(100*10, mean=1.5, sd=2), ncol=10)
dat = rbind(x,y,z)
dat = rbind(x,y,z)
D2  = as.matrix(dist(dat))^2
library(Matrix)
rankMatrix(D2)
