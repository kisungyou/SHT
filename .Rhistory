## generate samples from uniform distribution
x = stats::rgamma(496, 1)
## test with both methods of attaining p-values
test1 = norm.2008RJB(x, method="a") # Asymptotics
test2 = norm.2008RJB(x, method="m") # Monte Carlo
test1
test2
## generate samples from uniform distribution
x = runif(496)
## test with both methods of attaining p-values
test1 = norm.2008RJB(x, method="a") # Asymptotics
test2 = norm.2008RJB(x, method="m") # Monte Carlo
test1
test2
test
test2 = norm.2008RJB(x, method="m") # Monte Carlo
test2
test2 = norm.2008RJB(x, method="m") # Monte Carlo
test2
rm(list=ls())
library(SHT)
library(SHT)
## generate samples from uniform distribution
x = runif(496)
## test with both methods of attaining p-values
test1 = norm.1987JB(x, method="a") # Asymptotics
test2 = norm.1987JB(x, method="m") # Monte Carlo
test1
test2
## generate samples from uniform distribution
x = runif(496)
## test with both methods of attaining p-values
test1 = norm.1996AJB(x, method="a") # Asymptotics
test2 = norm.1996AJB(x, method="m") # Monte Carlo
test1
test2
## generate samples from uniform distribution
x = runif(496)
## test with both methods of attaining p-values
test1 = norm.1996AJB(x, method="a") # Asymptotics
test2 = norm.1996AJB(x, method="m") # Monte Carlo
test1
test2
library(SHT)
library(SHT)
X = matrix(rnorm(50*100), ncol=100)
Y = matrix(rnorm(30*100), ncol=100)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
aa
max(aa$log.BF.mat)
max(bb$log.BF.mat)
bmat = bb$#log.BF.mat
bmat = bb$log.BF.mat
bmat[1:5,1:5]
library(SHT)
library(SHT)
X = matrix(rnorm(50*100), ncol=100)
Y = matrix(rnorm(30*100), ncol=100)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
aa
max(aa$log.BF.mat)
max(bb$log.BF.mat)
library(SHT)
X = matrix(rnorm(50*100), ncol=100)
Y = matrix(rnorm(30*100), ncol=100)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
max(aa$log.BF.mat)
bb
library(SHT)
X = matrix(rnorm(50*100), ncol=100)
Y = matrix(rnorm(30*100), ncol=100)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
aa
max(aa$log.BF.mat)
bb
library(SHT)
max(aa$log.BF.mat)
X = matrix(rnorm(50*100), ncol=100)
Y = matrix(rnorm(30*100), ncol=100)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
max(aa$log.BF.mat)
X = matrix(rnorm(50*100), ncol=10)
Y = matrix(rnorm(30*100), ncol=10)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
max(aa$log.BF.mat)
bb
library(SHT)
X = matrix(rnorm(50*100), ncol=10)
Y = matrix(rnorm(30*100), ncol=10)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
library(SHT)
X = matrix(rnorm(50*100), ncol=10)
Y = matrix(rnorm(30*100), ncol=10)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
max(aa$log.BF.mat)
max(bb$log.BF.mat)
library(SHT)
X = matrix(rnorm(50*100), ncol=10)
Y = matrix(rnorm(30*100), ncol=10)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
max(aa$log.BF.mat)
bb
X = matrix(rnorm(50*5), ncol=5)
Y = matrix(rnorm(30*5), ncol=5)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
aa
max(aa$log.BF.mat)
max(bb$log.BF.mat)
library(SHT)
X = matrix(rnorm(50*5), ncol=5)
Y = matrix(rnorm(30*5), ncol=5)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
aa
bb
aa$log.BF.mat
bb$log.BF.mat
max(bb$log.BF.mat)
max(aa$log.BF.mat)
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
max(aa$log.BF.mat)
max(bb$log.BF.mat)
library(SHT)
library(SHT)
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
max(aa$log.BF.mat)
max(bb$log.BF.mat)
library(SHT)
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
aa
max(aa$log.BF.mat)
max(bb$log.BF.mat)
exp(4.924)
library(SHT)
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
max(aa$log.BF.mat)
max(bb$log.BF.mat)
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
p = 20
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
p = 100
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
library(SHT)
p = 100
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = cov2.mxPBF(X,Y)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
library(SHT)
p = 100
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
b1 = cov2.mxPBF(X,Y,nCores=1)
b2 = cov2.mxPBF(X,Y,nCores=2)
b4 = cov2.mxPBF(X,Y,nCores=4)
b8 = cov2.mxPBF(X,Y,nCores=8)
c(max(aa$log.BF.mat), max(b1$log.BF.mat), max(b2$log.BF.mat), max(b4$log.BF.mat), max(b8$log.BF.mat))
library(SHT)
p = 100
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
b1 = cov2.mxPBF(X,Y,nCores=1)
b2 = cov2.mxPBF(X,Y,nCores=2)
b4 = cov2.mxPBF(X,Y,nCores=4)
b8 = cov2.mxPBF(X,Y,nCores=8)
c(max(aa$log.BF.mat), max(b1$log.BF.mat), max(b2$log.BF.mat), max(b4$log.BF.mat), max(b8$log.BF.mat))
p = 100
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
b1 = cov2.mxPBF(X,Y,nCores=1)
b2 = cov2.mxPBF(X,Y,nCores=2)
b4 = cov2.mxPBF(X,Y,nCores=4)
b8 = cov2.mxPBF(X,Y,nCores=8)
c(max(aa$log.BF.mat), max(b1$log.BF.mat), max(b2$log.BF.mat), max(b4$log.BF.mat), max(b8$log.BF.mat))
p = 500
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
b1 = cov2.mxPBF(X,Y,nCores=1)
b2 = cov2.mxPBF(X,Y,nCores=2)
b4 = cov2.mxPBF(X,Y,nCores=4)
b8 = cov2.mxPBF(X,Y,nCores=8)
c(max(aa$log.BF.mat), max(b1$log.BF.mat), max(b2$log.BF.mat), max(b4$log.BF.mat), max(b8$log.BF.mat))
p = 125
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
library(microbenchmark)
timeout = microbenchmark(list=alist(R=mxPBF::testcov2(X,Y),
C1=cov2.mxPBF(X,Y,nCores=1),
C2=cov2.mxPBF(X,Y,nCores=2),
C4=cov2.mxPBF(X,Y,nCores=4),
C8=cov2.mxPBF(X,Y,nCores=8), times=10))
p = 50
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
# aa = mxPBF::testcov2(X, Y)
# b1 = cov2.mxPBF(X,Y,nCores=1)
# b2 = cov2.mxPBF(X,Y,nCores=2)
# b4 = cov2.mxPBF(X,Y,nCores=4)
# b8 = cov2.mxPBF(X,Y,nCores=8)
# c(max(aa$log.BF.mat), max(b1$log.BF.mat), max(b2$log.BF.mat), max(b4$log.BF.mat), max(b8$log.BF.mat))
library(microbenchmark)
timeout = microbenchmark(list=alist(R=mxPBF::testcov2(X,Y),
C1=cov2.mxPBF(X,Y,nCores=1),
C2=cov2.mxPBF(X,Y,nCores=2),
C4=cov2.mxPBF(X,Y,nCores=4),
C8=cov2.mxPBF(X,Y,nCores=8), times=10))
timeout
C1
aa = mxPBF::testcov2(X, Y)
b1 = cov2.mxPBF(X,Y,nCores=1)
b2 = cov2.mxPBF(X,Y,nCores=2)
b4 = cov2.mxPBF(X,Y,nCores=4)
b8 = cov2.mxPBF(X,Y,nCores=8)
c(max(aa$log.BF.mat), max(b1$log.BF.mat), max(b2$log.BF.mat), max(b4$log.BF.mat), max(b8$log.BF.mat))
library(SHT)
library(SHT)
p = 50
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
b1 = mean2.mxPBF(X,Y,nCores=1)
b2 = mean2.mxPBF(X,Y,nCores=2)
b4 = mean2.mxPBF(X,Y,nCores=4)
b8 = mean2.mxPBF(X,Y,nCores=8)
c(max(aa$log.BF.vec), max(b1$log.BF.vec), max(b2$log.BF.vec), max(b4$log.BF.vec), max(b8$log.BF.vec))
p = 50
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
b1 = mean2.mxPBF(X,Y,nthreads=1)
b2 = mean2.mxPBF(X,Y,nthreads=2)
b4 = mean2.mxPBF(X,Y,nthreads=4)
b8 = mean2.mxPBF(X,Y,nthreads=8)
c(max(aa$log.BF.vec), max(b1$log.BF.vec), max(b2$log.BF.vec), max(b4$log.BF.vec), max(b8$log.BF.vec))
b1
b1$log.BF.mat
library(SHT)
p = 10
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = mean2.mxPBF(X,Y)
#
p = 10
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = mean2.mxPBF(X,Y)
X
dim(X)
dim(Y)
library(SHT)
p = 10
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
bb = mean2.mxPBF(X,Y)
aa
max(aa$log.BF.mat)
p = 10
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testmean2(X, Y)
bb = mean2.mxPBF(X,Y)
a
aa
bb
bb$log.BF.vec
aa$log.BF.vec
library(SHT)
p = 10
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testmean2(X, Y)
bb = mean2.mxPBF(X,Y)
b1 = mean2.mxPBF(X,Y,nthreads=1)
b2 = mean2.mxPBF(X,Y,nthreads=2)
b4 = mean2.mxPBF(X,Y,nthreads=4)
b8 = mean2.mxPBF(X,Y,nthreads=8)
c(max(aa$log.BF.vec), max(b1$log.BF.vec), max(b2$log.BF.vec), max(b4$log.BF.vec), max(b8$log.BF.vec))
p = 100
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testmean2(X, Y)
bb = mean2.mxPBF(X,Y)
b1 = mean2.mxPBF(X,Y,nthreads=1)
b2 = mean2.mxPBF(X,Y,nthreads=2)
b4 = mean2.mxPBF(X,Y,nthreads=4)
b8 = mean2.mxPBF(X,Y,nthreads=8)
c(max(aa$log.BF.vec), max(b1$log.BF.vec), max(b2$log.BF.vec), max(b4$log.BF.vec), max(b8$log.BF.vec))
library(microbenchmark)
timeout = microbenchmark(list=alist(R=mxPBF::testcov2(X,Y),
C1=mean2.mxPBF(X,Y,nthreads=1),
C2=mean2.mxPBF(X,Y,nthreads=2),
C4=mean2.mxPBF(X,Y,nthreads=4),
C8=mean2.mxPBF(X,Y,nthreads=8), times=10))
library(SHT)
p = 100
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testmean2(X, Y)
bb = mean2.mxPBF(X,Y)
b1 = mean2.mxPBF(X,Y,nthreads=1)
b2 = mean2.mxPBF(X,Y,nthreads=2)
b4 = mean2.mxPBF(X,Y,nthreads=4)
b8 = mean2.mxPBF(X,Y,nthreads=8)
c(max(aa$log.BF.vec), max(b1$log.BF.vec), max(b2$log.BF.vec), max(b4$log.BF.vec), max(b8$log.BF.vec))
library(microbenchmark)
timeout = microbenchmark(list=alist(R=mxPBF::testcov2(X,Y),
C1=mean2.mxPBF(X,Y,nthreads=1),
C2=mean2.mxPBF(X,Y,nthreads=2),
C4=mean2.mxPBF(X,Y,nthreads=4),
C8=mean2.mxPBF(X,Y,nthreads=8), times=10))
library(microbenchmark)
timeout = microbenchmark(list=alist(R=mxPBF::testmean2(X,Y),
C1=mean2.mxPBF(X,Y,nthreads=1),
C2=mean2.mxPBF(X,Y,nthreads=2),
C4=mean2.mxPBF(X,Y,nthreads=4),
C8=mean2.mxPBF(X,Y,nthreads=8), times=10))
timeout
b1 = mean2.mxPBF(X,Y,nthreads=1)
b2 = mean2.mxPBF(X,Y,nthreads=2)
b4 = mean2.mxPBF(X,Y,nthreads=4)
b8 = mean2.mxPBF(X,Y,nthreads=8)
c(max(aa$log.BF.vec), max(b1$log.BF.vec), max(b2$log.BF.vec), max(b4$log.BF.vec), max(b8$log.BF.vec))
bb
library(SHT)
p = 100
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testmean2(X, Y)
bb = mean2.mxPBF(X,Y)
aa
max(aa$log.BF.vec)
max(bb$log.BF.vec)
bb
library(SHT)
p = 50
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
b1 = cov2.mxPBF(X,Y,nCores=1)
b2 = cov2.mxPBF(X,Y,nCores=2)
b4 = cov2.mxPBF(X,Y,nCores=4)
b8 = cov2.mxPBF(X,Y,nCores=8)
c(max(aa$log.BF.mat), max(b1$log.BF.mat), max(b2$log.BF.mat), max(b4$log.BF.mat), max(b8$log.BF.mat))
p = 50
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
b1 = cov2.mxPBF(X,Y,nthreads=1)
b2 = cov2.mxPBF(X,Y,nthreads=2)
b4 = cov2.mxPBF(X,Y,nthreads=4)
b8 = cov2.mxPBF(X,Y,nthreads=8)
c(max(aa$log.BF.mat), max(b1$log.BF.mat), max(b2$log.BF.mat), max(b4$log.BF.mat), max(b8$log.BF.mat))
p = 50
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testcov2(X, Y)
b1 = cov2.mxPBF(X,Y,nthreads=1)
b2 = cov2.mxPBF(X,Y,nthreads=2)
b4 = cov2.mxPBF(X,Y,nthreads=4)
b8 = cov2.mxPBF(X,Y,nthreads=8)
c(max(aa$log.BF.mat), max(b1$log.BF.mat), max(b2$log.BF.mat), max(b4$log.BF.mat), max(b8$log.BF.mat))
b1 = mean2.mxPBF(X,Y,nthreads=1)
b2 = mean2.mxPBF(X,Y,nthreads=2)
b4 = mean2.mxPBF(X,Y,nthreads=4)
b8 = mean2.mxPBF(X,Y,nthreads=8)
c(max(aa$log.BF.vec), max(b1$log.BF.vec), max(b2$log.BF.vec), max(b4$log.BF.vec), max(b8$log.BF.vec))
p = 100
X = matrix(rnorm(100*p), ncol=p)
Y = matrix(rnorm(80*p), ncol=p)
aa = mxPBF::testmean2(X, Y)
bb = mean2.mxPBF(X,Y)
b1 = mean2.mxPBF(X,Y,nthreads=1)
b2 = mean2.mxPBF(X,Y,nthreads=2)
b4 = mean2.mxPBF(X,Y,nthreads=4)
b8 = mean2.mxPBF(X,Y,nthreads=8)
c(max(aa$log.BF.vec), max(b1$log.BF.vec), max(b2$log.BF.vec), max(b4$log.BF.vec), max(b8$log.BF.vec))
library(SHT)
#
# # p = 50
# # X = matrix(rnorm(100*p), ncol=p)
# # aa = mxPBF::testcov1(X)
# # bb = cov1.mxPBF(X)
source('~/Desktop/SHT/R/cov1.mxPBF.R', echo=TRUE)
p = 50
X = matrix(rnorm(100*p), ncol=p)
aa = mxPBF::testcov1(X)
bb = cov1.mxPBF(X)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
library(SHT)
p = 50
X = matrix(rnorm(100*p), ncol=p)
aa = mxPBF::testcov1(X)
bb = cov1.mxPBF(X)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
library(SHT)
p = 50
X = matrix(rnorm(100*p), ncol=p)
aa = mxPBF::testcov1(X)
bb = cov1.mxPBF(X)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
library(SHT)
library(SHT)
p = 50
X = matrix(rnorm(100*p), ncol=p)
aa = mxPBF::testcov1(X)
bb = cov1.mxPBF(X)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
library(SHT)
p = 50
X = matrix(rnorm(100*p), ncol=p)
aa = mxPBF::testcov1(X)
bb = cov1.mxPBF(X)
c(max(aa$log.BF.mat), max(bb$log.BF.mat))
cov1.mxPBF(X)
Y = matrix(rnorm(50*p), ncol=p)
cov2.mxPBF(X,Y)
cov1.mxPBF(X)
