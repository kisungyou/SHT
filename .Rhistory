cov1.2015WL(smallX) # run the test
smallX = matrix(rnorm(10*3),ncol=3)
cov1.2015WL(smallX) # run the test
smallX = matrix(rnorm(10*3),ncol=3)
cov1.2015WL(smallX) # run the test
smallX = matrix(rnorm(10*3),ncol=3)
cov1.2015WL(smallX) # run the test
smallX = matrix(rnorm(10*3),ncol=3)
cov1.2015WL(smallX) # run the test
smallX = matrix(rnorm(10*3),ncol=3)
cov1.2015WL(smallX) # run the test
smallX = matrix(rnorm(10*3),ncol=3)
cov1.2015WL(smallX) # run the test
smallX = matrix(rnorm(10*3),ncol=3)
cov1.2015WL(smallX) # run the test
smallX = matrix(rnorm(10*3),ncol=3)
cov1.2015WL(smallX) # run the test
smallX = matrix(rnorm(10*3),ncol=3)
cov1.2015WL(smallX) # run the test
smallX = matrix(rnorm(10*3),ncol=3)
cov1.2015WL(smallX) # run the test
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X, type=1)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X, type=1)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X, type=1)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X, type=1)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X, type=1)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X, type=1)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X, type=1)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X, type=1)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X, type=1)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X, type=1)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X, type=1)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter1[i] = ifelse(cov1.2015WL(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter[i] = ifelse(cov1.2015WL(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
niter   = 1000
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
counter[i] = ifelse(cov1.2015WL(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
## empirical Type 1 error
##   compare effects of m=10, 50, 100
niter = 1000
rec1  = rep(0,niter)
rec2  = rep(0,niter)
rec3  = rep(0,niter)
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
rec1[i] = ifelse(cov1.2015WL(X, m=10)$p.value < 0.05, 1, 0)
rec2[i] = ifelse(cov1.2015WL(X, m=50)$p.value < 0.05, 1, 0)
rec3[i] = ifelse(cov1.2015WL(X, m=100)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* Type 1 error with m=10  : %.4f\n", sum(rec1/niter)),
sprintf("*                   m=50  : %.4f\n", sum(rec2/niter)),
sprintf("*                   m=100 : %.4f\n", sum(rec2/niter)),sep=""))
## empirical Type 1 error
##   compare effects of m=10, 25, 100
niter = 1000
rec1  = rep(0,niter)
rec2  = rep(0,niter)
rec3  = rep(0,niter)
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
rec1[i] = ifelse(cov1.2015WL(X, m=10)$p.value < 0.05, 1, 0)
rec2[i] = ifelse(cov1.2015WL(X, m=25)$p.value < 0.05, 1, 0)
rec3[i] = ifelse(cov1.2015WL(X, m=100)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* Type 1 error with m=10  : %.4f\n", sum(rec1/niter)),
sprintf("*                   m=50  : %.4f\n", sum(rec2/niter)),
sprintf("*                   m=100 : %.4f\n", sum(rec2/niter)),sep=""))
## empirical Type 1 error
##   compare effects of m=10, 25, 100
niter = 1000
rec1  = rep(0,niter)
rec2  = rep(0,niter)
rec3  = rep(0,niter)
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
rec1[i] = ifelse(cov1.2015WL(X, m=10)$p.value < 0.05, 1, 0)
rec2[i] = ifelse(cov1.2015WL(X, m=25)$p.value < 0.05, 1, 0)
rec3[i] = ifelse(cov1.2015WL(X, m=100)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* Type 1 error with m=10  : %.4f\n", sum(rec1/niter)),
sprintf("*                   m=50  : %.4f\n", sum(rec2/niter)),
sprintf("*                   m=100 : %.4f\n", sum(rec2/niter)),sep=""))
##rec2
rec2
rec3
all(rec2==rec3)
## empirical Type 1 error
##   compare effects of m=5, 10, 50
niter = 1000
rec1  = rep(0,niter) # for m=5
rec2  = rep(0,niter) #     m=10
rec3  = rep(0,niter) #     m=50
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=50) # (n,p) = (5,50)
rec1[i] = ifelse(cov1.2015WL(X, m=5)$p.value < 0.05, 1, 0)
rec2[i] = ifelse(cov1.2015WL(X, m=10)$p.value < 0.05, 1, 0)
rec3[i] = ifelse(cov1.2015WL(X, m=50)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* Type 1 error with m=5  : %.4f\n", sum(rec1/niter)),
sprintf("*                   m=10  : %.4f\n", sum(rec2/niter)),
sprintf("*                   m=50 : %.4f\n", sum(rec2/niter)),sep=""))
## empirical Type 1 error
##   compare effects of m=5, 10, 50
niter = 1000
rec1  = rep(0,niter) # for m=5
rec2  = rep(0,niter) #     m=10
rec3  = rep(0,niter) #     m=50
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(cov1.2015WL(X, m=5)$p.value < 0.05, 1, 0)
rec2[i] = ifelse(cov1.2015WL(X, m=10)$p.value < 0.05, 1, 0)
rec3[i] = ifelse(cov1.2015WL(X, m=50)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* Type 1 error with m=5  : %.4f\n", sum(rec1/niter)),
sprintf("*                   m=10 : %.4f\n", sum(rec2/niter)),
sprintf("*                   m=50 : %.4f\n", sum(rec2/niter)),sep=""))
niter = 1000
rec1  = rep(0,niter) # for m=5
rec2  = rep(0,niter) #     m=10
rec3  = rep(0,niter) #     m=50
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(cov1.2015WL(X, m=1)$p.value < 0.05, 1, 0)
rec2[i] = ifelse(cov1.2015WL(X, m=5)$p.value < 0.05, 1, 0)
rec3[i] = ifelse(cov1.2015WL(X, m=25)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* Type 1 error with m=5  : %.4f\n", sum(rec1/niter)),
sprintf("*                   m=10 : %.4f\n", sum(rec2/niter)),
sprintf("*                   m=50 : %.4f\n", sum(rec2/niter)),sep=""))
## empirical Type 1 error
##   compare effects of m=5, 10, 50
niter = 1000
rec1  = rep(0,niter) # for m=5
rec2  = rep(0,niter) #     m=10
rec3  = rep(0,niter) #     m=50
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(cov1.2015WL(X, m=5)$p.value < 0.05, 1, 0)
rec2[i] = ifelse(cov1.2015WL(X, m=10)$p.value < 0.05, 1, 0)
rec3[i] = ifelse(cov1.2015WL(X, m=50)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* Type 1 error with m=5  : %.4f\n", sum(rec1/niter)),
sprintf("*                   m=10 : %.4f\n", sum(rec2/niter)),
sprintf("*                   m=50 : %.4f\n", sum(rec2/niter)),sep=""))
library(SHT)
## CRAN-purpose small example
smallX = matrix(rnorm(10*3),ncol=3)
smallY = matrix(rnorm(10*3),ncol=3)
cov2.2015WL(smallX, smallY) # run the test
## CRAN-purpose small example
smallX = matrix(rnorm(10*3),ncol=3)
smallY = matrix(rnorm(10*3),ncol=3)
cov2.2015WL(smallX, smallY) # run the test
## CRAN-purpose small example
smallX = matrix(rnorm(10*3),ncol=3)
smallY = matrix(rnorm(10*3),ncol=3)
cov2.2015WL(smallX, smallY) # run the test
## CRAN-purpose small example
smallX = matrix(rnorm(10*3),ncol=3)
smallY = matrix(rnorm(10*3),ncol=3)
cov2.2015WL(smallX, smallY) # run the test
## CRAN-purpose small example
smallX = matrix(rnorm(10*3),ncol=3)
smallY = matrix(rnorm(10*3),ncol=3)
cov2.2015WL(smallX, smallY) # run the test
## CRAN-purpose small example
smallX = matrix(rnorm(10*3),ncol=3)
smallY = matrix(rnorm(10*3),ncol=3)
cov2.2015WL(smallX, smallY) # run the test
## CRAN-purpose small example
smallX = matrix(rnorm(10*3),ncol=3)
smallY = matrix(rnorm(10*3),ncol=3)
cov2.2015WL(smallX, smallY) # run the test
## CRAN-purpose small example
smallX = matrix(rnorm(10*3),ncol=3)
smallY = matrix(rnorm(10*3),ncol=3)
cov2.2015WL(smallX, smallY) # run the test
## CRAN-purpose small example
smallX = matrix(rnorm(10*3),ncol=3)
smallY = matrix(rnorm(10*3),ncol=3)
cov2.2015WL(smallX, smallY) # run the test
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(cov2.2015WL(X, Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov2.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(cov2.2015WL(X, Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov2.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(cov2.2015WL(X, Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov2.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(rnorm(50*5), ncol=10)
Y = matrix(rnorm(50*5), ncol=10)
counter[i] = ifelse(cov2.2015WL(X, Y)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov2.2015WL'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
cov2.2015WL(X,Y)
alpha = 0.1
m = 10
qnorm(1-(1-0.1)^(1/10))
qnorm(1-(1-0.1)^(1/100))
qnorm(1-(1-0.1)^(1/1000))
library(SHT)
##   compare effects of m=5, 10, 50
niter = 1000
rec1  = rep(0,niter) # for m=5
rec2  = rep(0,niter) #     m=10
rec3  = rep(0,niter) #     m=50
rec4  = rep(0,niter)
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(cov1.2015WL(X, m=5)$p.value < 0.05, 1, 0)
rec2[i] = ifelse(cov1.2015WL(X, m=10)$p.value < 0.05, 1, 0)
rec3[i] = ifelse(cov1.2015WL(X, m=50)$p.value < 0.05, 1, 0)
rec4[i] = ifelse(isTRUE(cov1.2015WL(X, m=50)$reject), 1, 0)
}
sum(rec3)
sum(rec4)
library(SHT)
rec3  = rep(0,niter) #     m=50
rec4  = rep(0,niter)
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(cov1.2015WL(X, m=5)$p.value < 0.05, 1, 0)
rec2[i] = ifelse(cov1.2015WL(X, m=10)$p.value < 0.05, 1, 0)
rec3[i] = ifelse(cov1.2015WL(X, m=50)$p.value < 0.05, 1, 0)
rec4[i] = ifelse(isTRUE(cov1.2015WL(X, m=50)$reject), 1, 0)
}
rec3
which(rec3>0.5)
which(rec4>0.5)
help(qnorm)
qnorm(1-(1-0.1)^(1/100))
1-(1-0.1)^(1/100)
library(SHT)
##   compare effects of m=5, 10, 50
niter = 1000
rec1  = rep(0,niter) # for m=5
rec2  = rep(0,niter) #     m=10
rec3  = rep(0,niter) #     m=50
counter = rep(0,niter)  # p-values of the type 1
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(cov1.2015WL(X, m=5)$p.value < 0.05, 1, 0)
rec2[i] = ifelse(cov1.2015WL(X, m=10)$p.value < 0.05, 1, 0)
rec3[i] = ifelse(cov1.2015WL(X, m=50)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'cov1.2015WL'\n\n",
sprintf("* Type 1 error with m=5  : %.4f\n", sum(rec1/niter)),
sprintf("*                   m=10 : %.4f\n", sum(rec2/niter)),
sprintf("*                   m=50 : %.4f\n", sum(rec2/niter)),sep=""))
niter    = 1000
rec.pvec = rep(0,niter) # for m=5
rec.stat = rep(0,niter)
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=50) # (n,p) = (10,50)
oX= cov1.2015WL(X)
rec.pvec[i] = oX$p.value
rec.stat[i] = oX$statistic
}
mval     = 25
niter    = 1000
rec.pvec = rep(0,niter) # for m=5
rec.stat = rep(0,niter)
for (i in 1:niter){
X = matrix(rnorm(50*10), ncol=50) # (n,p) = (10,50)
oX= cov1.2015WL(X, m=mval)
rec.pvec[i] = oX$p.value
rec.stat[i] = oX$statistic
}
manualcut = qnorm(1-((1-0.05)^(1/m)))
manualcut
manualcut = qnorm(1-((1-0.05)^(1/m)), lower.tail = FALSE)
manualcut
sum(rec.stat>manualcut)
sum(rec.pvec<0.05)
library(SHT)
library(SHT)
library(SHT)
