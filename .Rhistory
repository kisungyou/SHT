niter = 1000
rec1  = rep(0,niter) # for Q1
rec2  = rep(0,niter) #     Q2
rec3  = rep(0,niter) #     Q3
for (i in 1:niter){
X = matrix(runif(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(unif.2017YMi(X, type="Q1")$p.value < 0.05, 1, 0)
rec2[i] = ifelse(unif.2017YMi(X, type="Q2")$p.value < 0.05, 1, 0)
rec3[i] = ifelse(unif.2017YMi(X, type="Q3")$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMi'\n\n",
sprintf("* Type 1 error with Q1 : %.4f\n", sum(rec1/niter)),
sprintf("*                   Q2 : %.4f\n", sum(rec2/niter)),
sprintf("*                   Q3 : %.4f\n", sum(rec2/niter)),sep=""))
## empirical Type 1 error
##   compare performances of three methods
niter = 1000
rec1  = rep(0,niter) # for Q1
rec2  = rep(0,niter) #     Q2
rec3  = rep(0,niter) #     Q3
for (i in 1:niter){
X = matrix(runif(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(unif.2017YMi(X, type="Q1")$p.value < 0.05, 1, 0)
rec2[i] = ifelse(unif.2017YMi(X, type="Q2")$p.value < 0.05, 1, 0)
rec3[i] = ifelse(unif.2017YMi(X, type="Q3")$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMi'\n\n",
sprintf("* Type 1 error with Q1 : %.4f\n", sum(rec1/niter)),
sprintf("*                   Q2 : %.4f\n", sum(rec2/niter)),
sprintf("*                   Q3 : %.4f\n", sum(rec2/niter)),sep=""))
##   compare performances of three methods
niter = 1000
rec1  = rep(0,niter) # for Q1
rec2  = rep(0,niter) #     Q2
rec3  = rep(0,niter) #     Q3
for (i in 1:niter){
X = matrix(runif(50*10), ncol=10) # (n,p) = (10,50)
rec1[i] = ifelse(unif.2017YMi(X, type="Q1")$p.value < 0.05, 1, 0)
rec2[i] = ifelse(unif.2017YMi(X, type="Q2")$p.value < 0.05, 1, 0)
rec3[i] = ifelse(unif.2017YMi(X, type="Q3")$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMi'\n\n",
sprintf("* Type 1 error with Q1 : %.4f\n", sum(rec1/niter)),
sprintf("*                   Q2 : %.4f\n", sum(rec2/niter)),
sprintf("*                   Q3 : %.4f\n", sum(rec2/niter)),sep=""))
##   compare performances of three methods
niter = 1000
rec1  = rep(0,niter) # for Q1
rec2  = rep(0,niter) #     Q2
rec3  = rep(0,niter) #     Q3
for (i in 1:niter){
X = matrix(runif(50*10), ncol=10) # (n,p) = (10,50)
rec1[i] = ifelse(unif.2017YMi(X, type="Q1")$p.value < 0.05, 1, 0)
rec2[i] = ifelse(unif.2017YMi(X, type="Q2")$p.value < 0.05, 1, 0)
rec3[i] = ifelse(unif.2017YMi(X, type="Q3")$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMi'\n\n",
sprintf("* Type 1 error with Q1 : %.4f\n", sum(rec1/niter)),
sprintf("*                   Q2 : %.4f\n", sum(rec2/niter)),
sprintf("*                   Q3 : %.4f\n", sum(rec2/niter)),sep=""))
##   compare performances of three methods
niter = 1000
rec1  = rep(0,niter) # for Q1
rec2  = rep(0,niter) #     Q2
rec3  = rep(0,niter) #     Q3
for (i in 1:niter){
X = matrix(runif(50*10), ncol=10) # (n,p) = (10,50)
rec1[i] = ifelse(unif.2017YMi(X, type="Q1")$p.value < 0.05, 1, 0)
rec2[i] = ifelse(unif.2017YMi(X, type="Q2")$p.value < 0.05, 1, 0)
rec3[i] = ifelse(unif.2017YMi(X, type="Q3")$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMi'\n\n",
sprintf("* Type 1 error with Q1 : %.4f\n", sum(rec1/niter)),
sprintf("*                   Q2 : %.4f\n", sum(rec2/niter)),
sprintf("*                   Q3 : %.4f\n", sum(rec2/niter)),sep=""))
rec2
rec3
all(rec3==rec3)
all(rec3==rec2)
## empirical Type 1 error
##   compare performances of three methods
niter = 10000
rec1  = rep(0,niter) # for Q1
rec2  = rep(0,niter) #     Q2
rec3  = rep(0,niter) #     Q3
for (i in 1:niter){
X = matrix(runif(50*10), ncol=10) # (n,p) = (10,50)
rec1[i] = ifelse(unif.2017YMi(X, type="Q1")$p.value < 0.05, 1, 0)
rec2[i] = ifelse(unif.2017YMi(X, type="Q2")$p.value < 0.05, 1, 0)
rec3[i] = ifelse(unif.2017YMi(X, type="Q3")$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMi'\n\n",
sprintf("* Type 1 error with Q1 : %.4f\n", sum(rec1/niter)),
sprintf("*                   Q2 : %.4f\n", sum(rec2/niter)),
sprintf("*                   Q3 : %.4f\n", sum(rec2/niter)),sep=""))
which(rec2)
which(rec2>0.1)
which(rec3>0.1)
## empirical Type 1 error
##   compare performances of three methods
niter = 1234
rec1  = rep(0,niter) # for Q1
rec2  = rep(0,niter) #     Q2
rec3  = rep(0,niter) #     Q3
for (i in 1:niter){
X = matrix(runif(50*10), ncol=10) # (n,p) = (10,50)
rec1[i] = ifelse(unif.2017YMi(X, type="Q1")$p.value < 0.05, 1, 0)
rec2[i] = ifelse(unif.2017YMi(X, type="Q2")$p.value < 0.05, 1, 0)
rec3[i] = ifelse(unif.2017YMi(X, type="Q3")$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMi'\n\n",
sprintf("* Type 1 error with Q1 : %.4f\n", sum(rec1/niter)),
sprintf("*                   Q2 : %.4f\n", sum(rec2/niter)),
sprintf("*                   Q3 : %.4f\n", sum(rec3/niter)),sep=""))
## empirical Type 1 error
##   compare performances of three methods
niter = 1234
rec1  = rep(0,niter) # for Q1
rec2  = rep(0,niter) #     Q2
rec3  = rep(0,niter) #     Q3
for (i in 1:niter){
X = matrix(runif(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(unif.2017YMi(X, type="Q1")$p.value < 0.05, 1, 0)
rec2[i] = ifelse(unif.2017YMi(X, type="Q2")$p.value < 0.05, 1, 0)
rec3[i] = ifelse(unif.2017YMi(X, type="Q3")$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMi'\n\n",
sprintf("* Type 1 error with Q1 : %.4f\n", sum(rec1/niter)),
sprintf("*                   Q2 : %.4f\n", sum(rec2/niter)),
sprintf("*                   Q3 : %.4f\n", sum(rec3/niter)),sep=""))
## empirical Type 1 error
##   compare performances of three methods
niter = 1234
rec1  = rep(0,niter) # for Q1
rec2  = rep(0,niter) #     Q2
rec3  = rep(0,niter) #     Q3
for (i in 1:niter){
X = matrix(runif(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(unif.2017YMi(X, type="Q1")$p.value < 0.05, 1, 0)
rec2[i] = ifelse(unif.2017YMi(X, type="Q2")$p.value < 0.05, 1, 0)
rec3[i] = ifelse(unif.2017YMi(X, type="Q3")$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMi'\n\n",
sprintf("* Type 1 error with Q1 : %.4f\n", sum(rec1/niter)),
sprintf("*                   Q2 : %.4f\n", sum(rec2/niter)),
sprintf("*                   Q3 : %.4f\n", sum(rec3/niter)),sep=""))
## empirical Type 1 error
##   compare performances of three methods
niter = 1234
rec1  = rep(0,niter) # for Q1
rec2  = rep(0,niter) #     Q2
rec3  = rep(0,niter) #     Q3
for (i in 1:niter){
X = matrix(runif(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(unif.2017YMi(X, type="Q1")$p.value < 0.05, 1, 0)
rec2[i] = ifelse(unif.2017YMi(X, type="Q2")$p.value < 0.05, 1, 0)
rec3[i] = ifelse(unif.2017YMi(X, type="Q3")$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMi'\n\n",
sprintf("* Type 1 error with Q1 : %.4f\n", sum(rec1/niter)),
sprintf("*                   Q2 : %.4f\n", sum(rec2/niter)),
sprintf("*                   Q3 : %.4f\n", sum(rec3/niter)),sep=""))
## empirical Type 1 error
##   compare performances of three methods
niter = 1234
rec1  = rep(0,niter) # for Q1
rec2  = rep(0,niter) #     Q2
rec3  = rep(0,niter) #     Q3
for (i in 1:niter){
X = matrix(runif(50*10), ncol=50) # (n,p) = (10,50)
rec1[i] = ifelse(unif.2017YMi(X, type="Q1")$p.value < 0.05, 1, 0)
rec2[i] = ifelse(unif.2017YMi(X, type="Q2")$p.value < 0.05, 1, 0)
rec3[i] = ifelse(unif.2017YMi(X, type="Q3")$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMi'\n\n",
sprintf("* Type 1 error with Q1 : %.4f\n", sum(rec1/niter)),
sprintf("*                   Q2 : %.4f\n", sum(rec2/niter)),
sprintf("*                   Q3 : %.4f\n", sum(rec3/niter)),sep=""))
qnorm(runif(10))
A = matrix(runif(10*5),ncol=5)
A
qnorm(A)
library(SHT)
smallX = matrix(runif(10*3),ncol=3)
unif.2017YMq(smallX) # run the test
library(SHT)
smallX = matrix(runif(10*3),ncol=3)
unif.2017YMq(smallX) # run the test
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1000
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
library(SHT)
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
## empirical Type 1 error
niter   = 1234
counter = rep(0,niter)  # record p-values
for (i in 1:niter){
X = matrix(runif(50*5), ncol=25)
counter[i] = ifelse(unif.2017YMq(X)$p.value < 0.05, 1, 0)
}
## print the result
cat(paste("\n* Example for 'unif.2017YMq'\n\n",
sprintf("* number of rejections   : %d\n",sum(counter)),
sprintf("* total number of trials : %d\n",niter),
sprintf("* empirical Type 1 error : %.4f\n", sum(counter/niter)),sep=""))
